"use strict";(self.webpackChunkaquarius_docs=self.webpackChunkaquarius_docs||[]).push([[344],{2084:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"circuit-simulator/sources/transient","title":"Transient","description":"Overview","source":"@site/docs/circuit-simulator/sources/transient.md","sourceDirName":"circuit-simulator/sources","slug":"/circuit-simulator/sources/transient","permalink":"/aquarius-docs/circuit-simulator/sources/transient","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Transient","sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Steady State (DC)","permalink":"/aquarius-docs/circuit-simulator/sources/steady-state"},"next":{"title":"General","permalink":"/aquarius-docs/circuit-simulator/solver-options/general"}}');var s=n(4848),t=n(8453);const l={title:"Transient",sidebar_position:2},d="Transient Sources",c={},h=[{value:"Overview",id:"overview",level:2},{value:"Parameters",id:"parameters",level:2},{value:"PWL",id:"pwl",level:3},{value:"Rectangle",id:"rectangle",level:3},{value:"Sine",id:"sine",level:3},{value:"Triangular",id:"triangular",level:3},{value:"Usage Instructions",id:"usage-instructions",level:2},{value:"Adding Points",id:"adding-points",level:3},{value:"Remove Entries",id:"remove-entries",level:3},{value:"Adjust the Number of Cycles",id:"adjust-the-number-of-cycles",level:3},{value:"Apply the Configuration",id:"apply-the-configuration",level:3}];function a(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"transient-sources",children:"Transient Sources"})}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"Used when performing a time-dependent simulation. These components provide time-varying current or voltage sources that drive a circuit with a defined waveform over time. They are ideal sources, meaning their output is defined entirely by the specified waveform, regardless of the connected load."}),"\n",(0,s.jsx)(i.p,{children:"There are four types of transient waveforms namely:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Piecewise Linear (PWL) Waveform.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Allows the definition of custom, non-periodic waveforms by specifying a series of time-value pairs, creating a piecewise linear signal. This is useful for complex waveforms that cannot be captured by simple sine, triangle, or square waves."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Sine Wave.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Generates a sinusoidal current or voltage signal."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Triangle Wave.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Generates a linear, periodic triangular waveform."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Rectangle Wave.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Generates a square wave with programmable high and low states, as well as on/off times."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(i.h3,{id:"pwl",children:"PWL"}),"\n",(0,s.jsx)("div",{class:"properties-table",children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Unit"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Times"})}),(0,s.jsx)(i.td,{children:"A list of time points defining the waveform."}),(0,s.jsx)(i.td,{children:"seconds"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Values"})}),(0,s.jsx)(i.td,{children:"A list of corresponding voltage or current values at each specified time point."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Number of Cycles"})}),(0,s.jsx)(i.td,{children:"The total number of cycles of the waveform the source outputs before stopping."}),(0,s.jsx)(i.td,{children:"-"})]})]})]})}),"\n",(0,s.jsx)(i.h3,{id:"rectangle",children:"Rectangle"}),"\n",(0,s.jsx)("div",{class:"properties-table",children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Unit"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Min Voltage/Current"})}),(0,s.jsx)(i.td,{children:"The lower level of the rectangular waveform."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Max Voltage/Current"})}),(0,s.jsx)(i.td,{children:"The upper level of the rectangular waveform."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Frequency"})}),(0,s.jsx)(i.td,{children:"The number of cycles the waveform completes per second."}),(0,s.jsx)(i.td,{children:"Hz"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta1"})}),(0,s.jsx)(i.td,{children:"The phase angle at which the waveform begins rising from the minimum to the maximum value."}),(0,s.jsx)(i.td,{children:"Degrees"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta2"})}),(0,s.jsx)(i.td,{children:"The phase angle at which the waveform reaches its maximum value."}),(0,s.jsx)(i.td,{children:"Degrees"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta3"})}),(0,s.jsx)(i.td,{children:"The phase angle at which the waveform begins falling from the maximum to the minimum value."}),(0,s.jsx)(i.td,{children:"Degrees"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta4"})}),(0,s.jsx)(i.td,{children:"The phase angle at which the waveform returns to its minimum value."}),(0,s.jsx)(i.td,{children:"Degrees"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Number of Cycles"})}),(0,s.jsx)(i.td,{children:"The total number of cycles of the waveform the source outputs before stopping."}),(0,s.jsx)(i.td,{children:"-"})]})]})]})}),"\n",(0,s.jsx)(i.h3,{id:"sine",children:"Sine"}),"\n",(0,s.jsx)("div",{class:"properties-table",children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Unit"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Max Voltage/Current"})}),(0,s.jsx)(i.td,{children:"The peak amplitude of the sine waveform."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Frequency"})}),(0,s.jsx)(i.td,{children:"The number of cycles the waveform completes per second."}),(0,s.jsx)(i.td,{children:"Hz"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta"})}),(0,s.jsx)(i.td,{children:"The phase angle that determines the initial position of the waveform within its cycle."}),(0,s.jsx)(i.td,{children:"Degrees"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"DC Component"})}),(0,s.jsx)(i.td,{children:"A constant offset added to the entire waveform, shifting it vertically."}),(0,s.jsx)(i.td,{children:"V or A"})]})]})]})}),"\n",(0,s.jsx)(i.h3,{id:"triangular",children:"Triangular"}),"\n",(0,s.jsx)("div",{class:"properties-table",children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Description"}),(0,s.jsx)(i.th,{children:"Unit"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Min Voltage/Current"})}),(0,s.jsx)(i.td,{children:"The lower level of the triangular waveform."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Max Voltage/Current"})}),(0,s.jsx)(i.td,{children:"The upper level of the triangular waveform."}),(0,s.jsx)(i.td,{children:"V or A"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Frequency"})}),(0,s.jsx)(i.td,{children:"The number of cycles the waveform completes per second."}),(0,s.jsx)(i.td,{children:"Hz"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Theta Start"})}),(0,s.jsx)(i.td,{children:"The phase angle that determines the initial point within the waveform's cycle."}),(0,s.jsx)(i.td,{children:"Degrees"})]})]})]})}),"\n",(0,s.jsx)(i.h2,{id:"usage-instructions",children:"Usage Instructions"}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["For instructions on adding a component to the simulation circuit, click ",(0,s.jsx)(i.a,{href:"../introduction#adding-a-component-to-the-simulation-circuit",children:"here"}),"."]})}),"\n",(0,s.jsx)("p",{align:"center",children:(0,s.jsx)("img",{src:"/img/circuit-simulator/sources/transient/01.png"})}),"\n",(0,s.jsx)(i.p,{children:"The steps below show how to configure the component effectively."}),"\n",(0,s.jsx)(i.h3,{id:"adding-points",children:"Adding Points"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Click ",(0,s.jsx)(i.code,{children:"Add Point"})," to add individual points, each point is a time-voltage or time-current value."]}),"\n",(0,s.jsxs)(i.li,{children:["Alternatively, you can ",(0,s.jsx)(i.code,{children:"Import"})," a list of values from an external CSV file."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"remove-entries",children:"Remove Entries"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Select a value from the list and left-click the cell to modify it's value."}),"\n",(0,s.jsxs)(i.li,{children:["Use ",(0,s.jsx)(i.code,{children:"Delete Point"})," to remove a selected entry."]}),"\n",(0,s.jsxs)(i.li,{children:["Use ",(0,s.jsx)(i.code,{children:"Clear All"})," to remove all values from the list."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"adjust-the-number-of-cycles",children:"Adjust the Number of Cycles"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"To adjust the number of cycles for the waveform, edit the value in the text box."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"apply-the-configuration",children:"Apply the Configuration"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Once all parameters are set, click ",(0,s.jsx)(i.code,{children:"OK"})," to save the changes."]}),"\n",(0,s.jsxs)(i.li,{children:["Click ",(0,s.jsx)(i.code,{children:"Cancel"})," to discard any changes and close the window."]}),"\n"]})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>d});var r=n(6540);const s={},t=r.createContext(s);function l(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);